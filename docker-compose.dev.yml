version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: kingsman-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: kingsman
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: a6fbnmod
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/app/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - kingsman-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kingsman"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Development with hot reload)
  backend:
    image: golang:1.23.2-alpine
    container_name: kingsman-backend-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: a6fbnmod
      DB_NAME: kingsman
      DB_SSLMODE: disable
      PORT: 8080
      CGO_ENABLED: 0
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - kingsman-network-dev
    volumes:
      - ./backend/app:/app
      - go_mod_cache:/go/pkg/mod
    command: >
      sh -c "
        apk add --no-cache git &&
        go mod download &&
        go install github.com/cosmtrek/air@latest &&
        air -c .air.toml
      "

  # Frontend (Development with hot reload)
  frontend:
    image: node:18-alpine
    container_name: kingsman-frontend-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - kingsman-network-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: >
      sh -c "
        npm install &&
        npm start
      "

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kingsman-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kingsman.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - kingsman-network-dev
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin

volumes:
  postgres_data_dev:
    driver: local
  pgadmin_data_dev:
    driver: local
  go_mod_cache:
    driver: local

networks:
  kingsman-network-dev:
    driver: bridge