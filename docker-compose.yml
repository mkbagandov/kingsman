version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: kingsman-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kingsman
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: a6fbnmod
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/app/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - kingsman-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kingsman"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kingsman-backend
    restart: unless-stopped
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: a6fbnmod
      DB_NAME: kingsman
      DB_SSLMODE: disable
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - kingsman-network
    volumes:
      - ./backend/app/.env:/root/.env:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kingsman-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - kingsman-network
    environment:
      - REACT_APP_API_URL=http://localhost:8080

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kingsman-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kingsman.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - kingsman-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  kingsman-network:
    driver: bridge